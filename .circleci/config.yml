# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  docker: circleci/docker@1.7

commands:
  save-images:
    parameters:
      tmp-dir:
        type: string
        default: "/tmp/images"
      image-tags:
        type: string
    steps:
      - run:
          name: Persist Docker images to tar file
          command: |
            mkdir -p << parameters.tmp-dir >>
            docker save << parameters.image-tags >> -o << parameters.tmp-dir >>/build-image
      - persist_to_workspace:
          name: Persist the workspace for later use
          root: ./tmp-images
          paths:
            - build-image

  load-images:
    parameters:
      tmp-dir:
        type: string
        default: "/tmp/images"
    steps:
      - attach_workspace:
          name: Attach to previously created workspace
          at: << parameters.tmp-dir >>
      - run:
          name: Load Docker images
          command: docker load -i << parameters.tmp-dir >>/build-image

  build-image:
    parameters:
      image-target:
        type: enum
        default: "build-image"
        enum: ["build-image", "build-image-test"]
      image-tags:
        type: string
        default: "${CIRCLE_SHA1}"
      squash:
        type: string
        default: ""
    steps:
      - checkout
      - run:
          name: Docker version
          command: docker version
      - docker/build:
          image: netlify/build
          extra_build_args: "--build-arg NF_IMAGE_VERSION=${CIRCLE_SHA1} --target << parameters.image-target >> << parameters.squash >>"
          tag: << parameters.image-tags >>

jobs:
  build-images:
    docker:
      - image: cimg/base:2021.04
    steps:
      - run:
          name: Sanitize branch name
          command: echo export "BRANCH=${CIRCLE_BRANCH//\//-}" >> "$BASH_ENV"
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.7
      - build-image:
          image-target: "build-image"
          image-tags: "${CIRCLE_SHA1},${BRANCH}"
      - build-image:
          image-target: "build-image-test"
          image-tags: "${CIRCLE_SHA1}-test,${BRANCH}-test"
      - save-images:
          image-tags: "netlify/build:${CIRCLE_SHA1}-test netlify/build:${BRANCH}-test netlify/build:${CIRCLE_SHA1} netlify/build:${BRANCH}"

  run-tests:
    docker:
      - image: cimg/base:2021.04
    steps:
      - load-images
      - run:
          name: Run Tests
          command: docker run --rm netlify/build:${CIRCLE_SHA1}-test

  build-and-push:
    docker:
      - image: cimg/base:2021.04
    steps:
      - run:
          name: Sanitize branch name
          command: echo export "BRANCH=${CIRCLE_BRANCH//\//-}" >> "$BASH_ENV"
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.7
      - build-image:
          image-target: "build-image"
          image-tags: "${CIRCLE_SHA1},${BRANCH}"
      # - run:
      #     name: Tag
      #     command: |
      #       docker tag netlify/build:$

  lint:
    executor: docker/machine
    steps:
      - checkout
      - docker/dockerlint


workflows: # workflows are where we specify the job order and job parameters (if applicable)
  test-build:
    jobs:
      - build-images
      - run-tests:
          requires: [build-images]
      # - build-and-push:
      #     requires: [run-tests, lint]
      - lint
